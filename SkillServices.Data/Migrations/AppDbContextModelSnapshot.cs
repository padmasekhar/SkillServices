// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillServices.Data.Database;

#nullable disable

namespace SkillServices.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillServices.Data.DbModels.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("SkillId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("tblSkills");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.SkillCategory", b =>
                {
                    b.Property<int>("SkillCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillCategoryId");

                    b.ToTable("tblSkillCategories");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.SkillSubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkillCategoryId")
                        .HasColumnType("int");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("SkillCategoryId");

                    b.ToTable("tblSkillSubCategories");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.Skill", b =>
                {
                    b.HasOne("SkillServices.Data.DbModels.SkillSubCategory", "SubCategory")
                        .WithMany("Skills")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.SkillSubCategory", b =>
                {
                    b.HasOne("SkillServices.Data.DbModels.SkillCategory", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("SkillCategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.SkillCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("SkillServices.Data.DbModels.SkillSubCategory", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
